{"version":3,"sources":["networks.js","utils.js","providerOptions.js","App.js","index.js"],"names":["networkParams","chainId","rpcUrls","chainName","nativeCurrency","name","decimals","symbol","blockExplorerUrls","iconUrls","blockExplorerUrl","truncateAddress","address","match","concat","toHex","num","Number","toString","providerOptions","walletlink","package","CoinbaseWalletSDK","options","appName","infuraId","process","walletconnect","WalletConnect","web3Modal","Web3Modal","cacheProvider","Home","_useState","useState","_useState2","_slicedToArray","provider","setProvider","_useState3","_useState4","library","setLibrary","_useState5","_useState6","account","setAccount","_useState7","_useState8","signature","setSignature","_useState9","_useState10","error","setError","_useState11","_useState12","setChainId","_useState13","_useState14","network","setNetwork","_useState15","_useState16","message","setMessage","_useState17","_useState18","signedMessage","setSignedMessage","_useState19","_useState20","verified","setVerified","connectWallet","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_provider","_library","accounts","_network","wrap","_context","prev","next","connect","sent","ethers","providers","Web3Provider","listAccounts","getNetwork","t0","stop","apply","arguments","switchNetwork","_ref2","_callee2","_context2","request","method","params","code","t1","signMessage","_ref3","_callee3","_signature","_context3","abrupt","verifyMessage","_ref4","_callee4","verify","_context4","toLowerCase","disconnect","_ref5","_callee5","_context5","clearCachedProvider","undefined","useEffect","cachedProvider","on","handleAccountsChanged","console","log","handleChainChanged","_hexChainId","handleDisconnect","removeListener","_jsx","_Fragment","children","_jsxs","VStack","justifyContent","alignItems","h","HStack","marginBottom","Text","margin","lineHeight","fontSize","fontWeight","sx","background","WebkitBackgroundClip","WebkitTextFillColor","Button","onClick","padding","CheckCircleIcon","color","WarningIcon","Tooltip","label","placement","Box","maxW","borderWidth","borderRadius","overflow","isDisabled","Select","placeholder","onChange","e","id","target","value","Input","maxLength","msg","w","rootElement","document","getElementById","ReactDOM","render","StrictMode","ChakraProvider","App"],"mappings":"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","file":"static/js/main.00b7da40.chunk.js","sourcesContent":["export const networkParams = {\n  \"0x1\": {\n    chainId: \"0x1\",\n    rpcUrls: [\"https://eth.llamarpc.com\"],\n    chainName: \"Ethereum Mainnet\",\n    nativeCurrency: { name: \"ETHER\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrls: [\"https://etherscan.io\"],\n    iconUrls: [\"https://ethereum.org/static/eth-diamond-purple.svg\"]\n  },\n  \"0xa4b1\": {\n    chainId: \"0xa4b1\",\n    rpcUrls: [\"https://arbitrum-one.publicnode.com\"],\n    chainName: \"Arbitrum One\",\n    nativeCurrency: { name: \"ETHER\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrl: [\"https://arbiscan.io\"],\n    iconUrls: [\n      \"https://arbiscan.io/images/svg/brands/arbitrum.svg?v=1.5\"\n    ]\n  },\n  \"0x2105\": {\n    chainId: \"0x2105\",\n    rpcUrls: [\"https://base.meowrpc.com\"],\n    chainName: \"Base\",\n    nativeCurrency: { name: \"ETHER\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrl: [\"https://base.blockscout.com\"],\n    iconUrls: [\n      \"https://docs.base.org/img/logo_dark.svg\"\n    ]\n  },\n  \"0xe708\": {\n    chainId: \"0xe708\",\n    rpcUrls: [\"https://rpc.linea.build\"],\n    chainName: \"Linea\",\n    nativeCurrency: { name: \"ETHER\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrl: [\"https://lineascan.build\"],\n    iconUrls: [\n      \"https://lineascan.build/images/logo.svg?v=23.8.3.0\"\n    ]\n  },\n  \"0x144\": {\n    chainId: \"0x144\",\n    rpcUrls: [\"https://mainnet.era.zksync.io\"],\n    chainName: \"zkSync Era Mainnet\",\n    nativeCurrency: { name: \"ETHER\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrl: [\"https://explorer.zksync.io\"],\n    iconUrls: [\n      \"https://era.zksync.io/docs/era-dark.svg\"\n    ]\n  },\n  \"0x44d\": {\n    chainId: \"0x44d\",\n    rpcUrls: [\"https://zkevm-rpc.com\"],\n    chainName: \"Polygon zkEVM\",\n    nativeCurrency: { name: \"ETHER\", decimals: 18, symbol: \"ETH\" },\n    blockExplorerUrl: [\"https://zkevm.polygonscan.com\"],\n    iconUrls: [\n      \"https://zkevm.polygonscan.com/images/logo.svg?v=23.8.3.0\"\n    ]\n  }\n};","export const truncateAddress = (address) => {\n  if (!address) return \"No Account\";\n  const match = address.match(\n    /^(0x[a-zA-Z0-9]{2})[a-zA-Z0-9]+([a-zA-Z0-9]{2})$/\n  );\n  if (!match) return address;\n  return `${match[1]}…${match[2]}`;\n};\n\nexport const toHex = (num) => {\n  const val = Number(num);\n  return \"0x\" + val.toString(16);\n};","import WalletConnect from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\n\nexport const providerOptions = {\n  walletlink: {\n    package: CoinbaseWalletSDK, // Required\n    options: {\n      appName: \"Web 3 Modal\", // Required\n      infuraId: process.env.REACT_APP_INFURA_KEY // Required unless you provide a JSON RPC url; see `rpc` below\n    }\n  },\n  walletconnect: {\n    package: WalletConnect, // required\n    options: {\n      infuraId: process.env.REACT_APP_INFURA_KEY // required\n    }\n  }\n};","import { useEffect, useState } from \"react\";\nimport {\n  VStack,\n  Button,\n  Text,\n  HStack,\n  Select,\n  Input,\n  Box\n} from \"@chakra-ui/react\";\nimport { CheckCircleIcon, WarningIcon } from \"@chakra-ui/icons\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport { networkParams } from \"./networks\";\nimport { toHex, truncateAddress } from \"./utils\";\nimport { ethers } from \"ethers\";\nimport Web3Modal from \"web3modal\";\nimport { providerOptions } from \"./providerOptions\";\n\nconst web3Modal = new Web3Modal({\n  cacheProvider: true, // optional\n  providerOptions // required\n});\n\nexport default function Home() {\n  const [provider, setProvider] = useState();\n  const [library, setLibrary] = useState();\n  const [account, setAccount] = useState();\n  const [signature, setSignature] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [chainId, setChainId] = useState();\n  const [network, setNetwork] = useState();\n  const [message, setMessage] = useState(\"\");\n  const [signedMessage, setSignedMessage] = useState(\"\");\n  const [verified, setVerified] = useState();\n\n  const connectWallet = async () => {\n    try {\n      const provider = await web3Modal.connect();\n      const library = new ethers.providers.Web3Provider(provider);\n      const accounts = await library.listAccounts();\n      const network = await library.getNetwork();\n      setProvider(provider);\n      setLibrary(library);\n      if (accounts) setAccount(accounts[0]);\n      setChainId(network.chainId);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const handleNetwork = (e) => {\n    const id = e.target.value;\n    setNetwork(Number(id));\n  };\n\n  const handleInput = (e) => {\n    const msg = e.target.value;\n    setMessage(msg);\n  };\n\n  const switchNetwork = async () => {\n    try {\n      await library.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: toHex(network) }]\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await library.provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [networkParams[toHex(network)]]\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n    }\n  };\n\n  const signMessage = async () => {\n    if (!library) return;\n    try {\n      const signature = await library.provider.request({\n        method: \"personal_sign\",\n        params: [message, account]\n      });\n      setSignedMessage(message);\n      setSignature(signature);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const verifyMessage = async () => {\n    if (!library) return;\n    try {\n      const verify = await library.provider.request({\n        method: \"personal_ecRecover\",\n        params: [signedMessage, signature]\n      });\n      setVerified(verify === account.toLowerCase());\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const refreshState = () => {\n    setAccount();\n    setChainId();\n    setNetwork(\"\");\n    setMessage(\"\");\n    setSignature(\"\");\n    setVerified(undefined);\n  };\n\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    refreshState();\n  };\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connectWallet();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (provider?.on) {\n      const handleAccountsChanged = (accounts) => {\n        console.log(\"accountsChanged\", accounts);\n        if (accounts) setAccount(accounts[0]);\n      };\n\n      const handleChainChanged = (_hexChainId) => {\n        setChainId(_hexChainId);\n      };\n\n      const handleDisconnect = () => {\n        console.log(\"disconnect\", error);\n        disconnect();\n      };\n\n      provider.on(\"accountsChanged\", handleAccountsChanged);\n      provider.on(\"chainChanged\", handleChainChanged);\n      provider.on(\"disconnect\", handleDisconnect);\n\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n          provider.removeListener(\"chainChanged\", handleChainChanged);\n          provider.removeListener(\"disconnect\", handleDisconnect);\n        }\n      };\n    }\n  }, [provider]);\n\n  return (\n    <>\n      <VStack justifyContent=\"center\" alignItems=\"center\" h=\"100vh\">\n        <HStack marginBottom=\"10px\">\n          <Text\n            margin=\"0\"\n            lineHeight=\"1.15\"\n            fontSize={[\"1.5em\", \"2em\", \"3em\", \"4em\"]}\n            fontWeight=\"600\"\n          >\n            Let's connect with\n          </Text>\n          <Text\n            margin=\"0\"\n            lineHeight=\"1.15\"\n            fontSize={[\"1.5em\", \"2em\", \"3em\", \"4em\"]}\n            fontWeight=\"600\"\n            sx={{\n              background: \"linear-gradient(90deg, #16bff0 0%, #85ddf2 70.35%)\",\n              WebkitBackgroundClip: \"text\",\n              WebkitTextFillColor: \"transparent\"\n            }}\n          >\n            AirdropFarmer Bot\n          </Text>\n        </HStack>\n        <HStack>\n          {!account ? (\n            <Button onClick={connectWallet}>Connect Wallet</Button>\n          ) : (\n            <Button onClick={disconnect}>Disconnect</Button>\n          )}\n        </HStack>\n        <VStack justifyContent=\"center\" alignItems=\"center\" padding=\"10px 0\">\n          <HStack>\n            <Text>{`Connection Status: `}</Text>\n            {account ? (\n              <CheckCircleIcon color=\"green\" />\n            ) : (\n              <WarningIcon color=\"#cd5700\" />\n            )}\n          </HStack>\n\n          <Tooltip label={account} placement=\"right\">\n            <Text>{`Account: ${truncateAddress(account)}`}</Text>\n          </Tooltip>\n          <Text>{`Network ID: ${chainId ? chainId : \"No Network\"}`}</Text>\n        </VStack>\n        {account && (\n          <HStack justifyContent=\"flex-start\" alignItems=\"flex-start\">\n            <Box\n              maxW=\"sm\"\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              overflow=\"hidden\"\n              padding=\"10px\"\n            >\n              <VStack>\n                <Button onClick={switchNetwork} isDisabled={!network}>\n                  Switch Network\n                </Button>\n                <Select placeholder=\"Select network\" onChange={handleNetwork}>\n                  <option value=\"1\">Ethereum Mainnet</option>\n                  <option value=\"324\">zkSync Era Mainnet</option>\n                  <option value=\"42161\">Arbitrum One</option>\n                  <option value=\"1101\">Polygon zkEVM</option>\n                  <option value=\"8453\">Base</option>\n                  <option value=\"59144\">Linea</option>\n                </Select>\n              </VStack>\n            </Box>\n            <Box\n              maxW=\"sm\"\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              overflow=\"hidden\"\n              padding=\"10px\"\n            >\n              <VStack>\n                <Button onClick={signMessage} isDisabled={!message}>\n                  Sign Message\n                </Button>\n                <Input\n                  placeholder=\"Set Message\"\n                  maxLength={20}\n                  onChange={handleInput}\n                  w=\"140px\"\n                />\n                {signature ? (\n                  <Tooltip label={signature} placement=\"bottom\">\n                    <Text>{`Signature: ${truncateAddress(signature)}`}</Text>\n                  </Tooltip>\n                ) : null}\n              </VStack>\n            </Box>\n            <Box\n              maxW=\"sm\"\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              overflow=\"hidden\"\n              padding=\"10px\"\n            >\n              <VStack>\n                <Button onClick={verifyMessage} isDisabled={!signature}>\n                  Verify Message\n                </Button>\n                {verified !== undefined ? (\n                  verified === true ? (\n                    <VStack>\n                      <CheckCircleIcon color=\"green\" />\n                      <Text>Signature Verified!</Text>\n                    </VStack>\n                  ) : (\n                    <VStack>\n                      <WarningIcon color=\"red\" />\n                      <Text>Signature Denied!</Text>\n                    </VStack>\n                  )\n                ) : null}\n              </VStack>\n            </Box>\n          </HStack>\n        )}\n        <Text>{error ? error.message : null}</Text>\n      </VStack>\n    </>\n  );\n}","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </StrictMode>,\n  rootElement\n);"],"sourceRoot":""}