name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Modify requirements.txt on non-Windows runner
        if: runner.os != 'Windows'
        run: |
          python -c "
          with open('requirements.txt', 'r', encoding='utf-16') as file:
              lines = file.readlines()
          with open('requirements.txt', 'w', encoding='utf-8') as file:
              for line in lines:
                  if 'pywin32==305' not in line:
                      file.write(line)
          "

      - name: Adjust requirements.txt to resolve dependency conflicts
        run: |
          python -c "
          with open('requirements.txt', 'r') as file:
              lines = file.readlines()
          with open('requirements.txt', 'w') as file:
              for line in lines:
                  if line.startswith(('blinker==', 'flask==', 'quart==')):
                      file.write(line.split('==')[0] + '\n')
                  else:
                      file.write(line)
          "

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync
          sudo apt-get install -y rsync gettext
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to server
        env:
          PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          PORT: ${{ secrets.PORT }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          AIRDROP_FARMER_DATABASE_URL: ${{ secrets.AIRDROP_FARMER_DATABASE_URL }}
          COINPAYMENTS_PUBLIC_KEY: ${{ secrets.COINPAYMENTS_PUBLIC_KEY }}
          COINPAYMENTS_PRIVATE_KEY: ${{ secrets.COINPAYMENTS_PRIVATE_KEY }}
          COINPAYMENTS_MERCHANT_ID: ${{ secrets.COINPAYMENTS_MERCHANT_ID }}
          COINPAYMENTS_IPN_SECRET: ${{ secrets.COINPAYMENTS_IPN_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          VAULT_URL: ${{ secrets.VAULT_URL }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          COVALENT_API_KEY: ${{ secrets.COVALENT_API_KEY }}
          TRANSPOSE_API_KEY: ${{ secrets.TRANSPOSE_API_KEY }}
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
        run: |
          set -e
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no -p $PORT $SERVER_USER@$SERVER_IP "mkdir -p /home/$SERVER_USER/AirdropFarmer"
          rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no -p $PORT" --exclude '.git' --exclude '.github' ./ $SERVER_USER@$SERVER_IP:/home/$SERVER_USER/AirdropFarmer/
          export TELEGRAM_TOKEN AIRDROP_FARMER_DATABASE_URL COINPAYMENTS_PUBLIC_KEY COINPAYMENTS_PRIVATE_KEY COINPAYMENTS_MERCHANT_ID COINPAYMENTS_IPN_SECRET ADMIN_EMAIL VAULT_URL VAULT_TOKEN COVALENT_API_KEY TRANSPOSE_API_KEY DUNE_API_KEY
          envsubst < systemd/airdropfarmer.service | sed 's/%i/$SERVER_USER/g' > airdropfarmer.service.tmp
          scp -P $PORT -i private_key.pem -o StrictHostKeyChecking=no airdropfarmer.service.tmp $SERVER_USER@$SERVER_IP:/tmp/airdropfarmer.service
          rm airdropfarmer.service.tmp
          ssh -i private_key.pem -o StrictHostKeyChecking=no -p $PORT $SERVER_USER@$SERVER_IP "cd /home/$SERVER_USER/AirdropFarmer/ && rm -rf venv && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt && sudo mv /tmp/airdropfarmer.service /etc/systemd/system/ && sudo systemctl enable airdropfarmer.service --now && sudo systemctl restart airdropfarmer.service"  # Add the restart command
          rm -f private_key.pem

      - name: Deploy Nginx configuration
        env:
          PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -P $PORT -i private_key.pem -o StrictHostKeyChecking=no nginx/AirdropFarmer.conf $SERVER_USER@$SERVER_IP:/tmp/AirdropFarmer.conf
          ssh -p $PORT -i private_key.pem -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sudo mv /tmp/AirdropFarmer.conf /etc/nginx/sites-available/AirdropFarmer && sudo ln -sf /etc/nginx/sites-available/AirdropFarmer /etc/nginx/sites-enabled/ && sudo systemctl restart nginx"
          rm -f private_key.pem
